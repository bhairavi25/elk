heat_template_version: 2013-05-23

description: >
  A demo template to show provisioning of a single Linux instances.
#This template worked with heat stack-create very well but not with /stacks , horizon etc
parameters:
  Server_name:
    type: string
    description: sample-heat-test
    default: test-provision9
  flavor:
    type: string
    description: medium flavor
    default: "m1.medium"
  image:
    type: string
    description: rhel
    default: "f700ef81-e0c3-4d97-a2d9-336ac0b12d25"
  network_id_External_Network:
    type: string
    description: Network
    default: "050aedc2-dc2b-4da9-b074-b1b616147f05"
  #availablity_zone:
    #type: string
    #description: Availability Zone
    #default: "nova"
  key_name:
    type: string
    description: 'For most clouds, the name of the key-pair to be used for the compute instance; for VMware clouds, the contents of the public SSH key for the compute instance'
    label: SSH Key name
    #default: Bhairavi
    constraints:
     - custom_constraint: nova.keypair

  salt_api_user:
      type: string
      description: The user connecting to Salt API
      default: saltauth

  salt_api_pass:
      type: string
      description: Password for connecting to Salt API
      hidden: True
      default: henYkXipzekI

  test_text1:
    type: string
    description: The server hosting the YUM repository
    default: "sample text1"

resources:

  windows_ico_15Jan2015:
    type: OS::Nova::Server
    properties:
      networks:
          - port: { get_resource: network_port }
      name: { get_param: Server_name }  # Server name
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      user_data_format: RAW
      user_data: { get_resource: was_standalone_init }

  network_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: network_id_External_Network }

  was_standalone1:
    type: OS::Heat::SoftwareConfig
    properties:
      config:
        str_replace:
          template: { get_file: "https://raw.githubusercontent.com/bhairavi25/elk/master/test1.sh" }
          params:
            $SALT_API_USER: { get_param: salt_api_user}
            $SALT_API_PASS: { get_param: salt_api_pass}
            $test_text1: { get_param: test_text1 }

  was_standalone2:
    type: OS::Heat::SoftwareConfig
    properties:
      config: { get_file: "https://raw.githubusercontent.com/bhairavi25/elk/master/test2.sh" }

  was_standalone3:
    type: OS::Heat::SoftwareConfig
    properties:
      config: { get_file: "https://raw.githubusercontent.com/bhairavi25/elk/master/test3.sh" }

  was_standalone_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
       - config: { get_resource: was_standalone1 }
       - config: { get_resource: was_standalone2 }
       - config: { get_resource: was_standalone3 }
